<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="0" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-12-18T13:28:04 PST" name="Suite" finished-at="2023-12-18T13:59:30 PST" duration-ms="1885748">
    <groups>
    </groups>
    <test started-at="2023-12-18T13:28:04 PST" name="Test" finished-at="2023-12-18T13:59:30 PST" duration-ms="1885748">
      <class name="com.testcases.TC_001_Diabetes">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:com.testcases.TC_001_Diabetes@618425b5]" started-at="2023-12-18T13:28:04 PST" name="setup" finished-at="2023-12-18T13:28:14 PST" duration-ms="10094" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="diabetesData()[pri:1, instance:com.testcases.TC_001_Diabetes@618425b5]" started-at="2023-12-18T13:28:14 PST" name="diabetesData" finished-at="2023-12-18T13:59:28 PST" duration-ms="1874007" status="FAIL">
          <exception class="java.io.FileNotFoundException">
            <message>
              <![CDATA[C:\Users\16692\git\Recipe_Scraping_Dec2023\src\test\resources\TestData\Team23-RecipeScraping-Data.xlsx (The process cannot access the file because it is being used by another process)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.io.FileNotFoundException: C:\Users\16692\git\Recipe_Scraping_Dec2023\src\test\resources\TestData\Team23-RecipeScraping-Data.xlsx (The process cannot access the file because it is being used by another process)
at java.base/java.io.FileOutputStream.open0(Native Method)
at java.base/java.io.FileOutputStream.open(FileOutputStream.java:298)
at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:237)
at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:126)
at com.testcases.BaseClass.RecipesPageWise(BaseClass.java:553)
at pageObjects.DiabetesPage.GetRecipes(DiabetesPage.java:36)
at com.testcases.TC_001_Diabetes.diabetesData(TC_001_Diabetes.java:14)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.io.FileNotFoundException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- diabetesData -->
        <test-method signature="CheckForHR()[pri:2, instance:com.testcases.TC_001_Diabetes@618425b5]" started-at="2023-12-18T13:59:28 PST" name="CheckForHR" finished-at="2023-12-18T13:59:29 PST" duration-ms="251" status="FAIL">
          <exception class="java.io.FileNotFoundException">
            <message>
              <![CDATA[C:\Users\16692\git\Recipe_Scraping_Dec2023\src\test\resources\TestData\Team23-RecipeScraping-Data.xlsx (The process cannot access the file because it is being used by another process)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.io.FileNotFoundException: C:\Users\16692\git\Recipe_Scraping_Dec2023\src\test\resources\TestData\Team23-RecipeScraping-Data.xlsx (The process cannot access the file because it is being used by another process)
at java.base/java.io.FileOutputStream.open0(Native Method)
at java.base/java.io.FileOutputStream.open(FileOutputStream.java:298)
at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:237)
at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:126)
at com.testcases.BaseClass.CheckForHealthyItems(BaseClass.java:277)
at pageObjects.DiabetesPage.CheckForHealthyRecipes(DiabetesPage.java:41)
at com.testcases.TC_001_Diabetes.CheckForHR(TC_001_Diabetes.java:19)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.io.FileNotFoundException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckForHR -->
        <test-method signature="CheckForA()[pri:3, instance:com.testcases.TC_001_Diabetes@618425b5]" started-at="2023-12-18T13:59:29 PST" name="CheckForA" finished-at="2023-12-18T13:59:29 PST" duration-ms="123" status="FAIL">
          <exception class="java.io.FileNotFoundException">
            <message>
              <![CDATA[C:\Users\16692\git\Recipe_Scraping_Dec2023\src\test\resources\TestData\Team23-RecipeScraping-Data.xlsx (The process cannot access the file because it is being used by another process)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.io.FileNotFoundException: C:\Users\16692\git\Recipe_Scraping_Dec2023\src\test\resources\TestData\Team23-RecipeScraping-Data.xlsx (The process cannot access the file because it is being used by another process)
at java.base/java.io.FileOutputStream.open0(Native Method)
at java.base/java.io.FileOutputStream.open(FileOutputStream.java:298)
at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:237)
at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:126)
at com.testcases.BaseClass.CheckForAllergy(BaseClass.java:324)
at pageObjects.DiabetesPage.CheckForAllergies(DiabetesPage.java:46)
at com.testcases.TC_001_Diabetes.CheckForA(TC_001_Diabetes.java:24)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.io.FileNotFoundException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckForA -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.testcases.TC_001_Diabetes@618425b5]" started-at="2023-12-18T13:59:29 PST" name="tearDown" finished-at="2023-12-18T13:59:30 PST" duration-ms="1192" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.testcases.TC_001_Diabetes -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
